---
interface Props {
	title: string;
	description: string;
}

const { title, description } = Astro.props;

import '@fontsource-variable/roboto-mono';

import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

import Satellite from '../icons/Satellite.astro'

---

<!doctype html>
<html lang="es">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content={description} />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>

	<body>
    <div id="mouse-effect" class="glowing-mouse">
      <Satellite class="size-12 orbiting-icon"/>
    </div>

		<div id="background-container retro-gradient animation: gradient 15s ease infinite" class="fixed inset-0 z-[-10] pointer-events-none"> 
      <div class="background-layer"></div>
      <div class="wave bg-blue-600/25"></div>
      <div class="wave bg-blue-600/25"></div>
      <div class="wave bg-blue-600/25"></div>
      <!-- retro-gradient -> bg-gradient -->
      
      <!--div class="relative h-full w-full bg-slate-950"><div class="absolute bottom-0 left-0 right-0 top-0 bg-[linear-gradient(to_right,#4f4f4f2e_1px,transparent_1px),linear-gradient(to_bottom,#4f4f4f2e_1px,transparent_1px)] bg-[size:14px_24px] [mask-image:radial-gradient(ellipse_60%_50%_at_50%_0%,#000_70%,transparent_100%)]"></div></div-->
    </div>
    
		<Header />
      <slot />
      <Footer />
      <script>

        if (typeof window !== "undefined") {
          document.addEventListener("DOMContentLoaded", function () {
            const follower = document.getElementById('mouse-effect');
            
            if (follower) {
              document.addEventListener("mousemove", function (event) {
                const center_position = 125
                const x = event.clientX + center_position + window.scrollX;
                const y = event.clientY + center_position + window.scrollY;
                follower.style.left = x + 'px';
                follower.style.top = y + 'px';

              });
            }
          });
        }
      </script>
	</body>
</html>

<style is:global>
	
	:root {
		color-scheme: light dark;
	}

	html {
		font-family: 'Roboto Mono Variable', monospace;
		scroll-behavior: smooth;
	}

	body {
		display: flex;
		flex-direction: column;
		justify-content: center;
	}

  /** HEART ICON */
	@media (prefers-reduced-motion) {
		html {
			scroll-behavior: auto;
		}
	}

	.heart {
			stroke-dasharray: 16; 
			animation: move 30s linear infinite;
		}
	
	@keyframes move {
		to {
			stroke-dashoffset: 1000; 
		}
	}

  .scroll-animation {
    animation: scroll 2.2s cubic-bezier(.15,.41,.69,.94) infinite;
  }

  @keyframes scroll {
    0% { opacity: 0; }
    10% { transform: translateY(0); opacity: 1; }
    100% { transform: translateY(15px); opacity: 0;}
  }

  /** SATELLITE CURSOR ORBIT */
  .orbiting-icon {
    animation: orbit 4s linear infinite; /* Adjust duration and timing function as needed */
  }

  @keyframes orbit {
    from {
      transform: rotate(0deg) translate(-80px) rotate(0deg);
    }
    to {
      transform: rotate(360deg) translate(-80px) rotate(-360deg);
    }
  }

  /** SHINE EFFECT HOVER IMAGES */
  .shine-hover-effect:after {
    background: linear-gradient(
      to right,
      rgba(255, 255, 255, 0.13) 0%,
      rgba(255, 255, 255, 0.13) 77%,
      rgba(255, 255, 255, 0.5) 92%,
      rgba(255, 255, 255, 0.0) 100%
    );
  }
  
  
  .shine-hover-effect:hover:after {
    opacity: 1;
    left: 150%;
    transition-property: left, top, opacity;
    transition-duration: 0.7s, 0.7s, 0.15s;
    transition-timing-function: ease;
  }

  /** BACKGROUND GRADIENT */
	.background-layer {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    animation-duration: 2s; /* Adjust the animation duration as needed */
    animation-fill-mode: forwards;
  }

  @keyframes fade-in {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 0.5;
    }
  }

  .background-layer:nth-child(1) {
    animation-name: fade-in;
  }

  /** MOUSE GLOW */
  .glowing-mouse  {
    position: absolute;
    border: solid 16px;
    border-color: rgba(0, 0, 255, 0.3);
    border-radius: 50%;
    pointer-events: none;
    z-index: 9999;
    transform: translate(-147px, -147px);
    background: radial-gradient(circle, rgba(0, 0, 255, 0.3) 0%, rgba(0, 0, 255, 0) 80%);
  }

  .retro-gradient {
    background: linear-gradient(180deg, rgba(56,189,248,1) 0%, rgba(37,99,235,1) 25%, rgba(255,37,197,1) 50%, rgba(254,106,106,1) 75%, rgba(254,198,0,1) 100%);
  }

  .shadow-retro-gradient {
    box-shadow: -5px -5px 10px rgb(60, 60, 60);
  }


  @keyframes gradient {
    0% {
        background-position: 0% 0%;
    }
    50% {
        background-position: 100% 100%;
    }
    100% {
        background-position: 0% 0%;
    }
  }

  .wave {
    border-radius: 1000% 1000% 0 0;
    position: fixed;
    width: 200%;
    height: 12em;
    animation: wave 10s -3s linear infinite;
    transform: translate3d(0, 0, 0);
    opacity: 0.8;
    bottom: 0;
    left: 0;
    z-index: -1;
  }

  .wave:nth-of-type(2) {
    bottom: -1.25em;
    animation: wave 18s linear reverse infinite;
    opacity: 0.8;
  }

.wave:nth-of-type(3) {
    bottom: -2.5em;
    animation: wave 20s -1s reverse infinite;
    opacity: 0.9;
  }

@keyframes wave {
    2% {
        transform: translateX(1);
    }

    25% {
        transform: translateX(-25%);
    }

    50% {
        transform: translateX(-50%);
    }

    75% {
        transform: translateX(-25%);
    }

    100% {
        transform: translateX(1);
    }
}
  
  /** GRID STYLES */
  .grid-container {
    display: grid;
    grid-template-columns: 280px 194px 196px 194px 280px;
    grid-template-rows: 75px 250px 100px 50px;    
  }

  .grid-education {
    display: grid;
    grid-template-columns: 590px 589.5px;
    grid-template-rows: 150px;
  }

  .grid-experience {
    display: grid;
    grid-template-columns: 530px 253px 253px;
    grid-template-rows: 150px 50px;
  }

  .grid-projects-container {
    display: grid;
    grid-template-columns: 420px;
    grid-template-rows: 250px;
  }

  /** SHADOW MONOCROMATIC */
  .grid-shadow {
    box-shadow: 5px 5px 10px rgb(25, 25, 25), -5px -5px 10px rgb(60, 60, 60);
  }

  .grid-shadow:hover {
    box-shadow: 0px 0px 5px rgb(191, 219, 254), 0px 0px 20px rgb(29, 78, 216);
  }

  /** EFECTO ESCRITURA */

  .typewriter {
    color: #fff;
    font-family: monospace;
    overflow: hidden; /* Ensures the content is not revealed until the animation */
    border-right: .15em solid orange; /* The typwriter cursor */
    white-space: nowrap; /* Keeps the content on a single line */
    margin: 0 auto; /* Gives that scrolling effect as the typing happens */
    letter-spacing: .15em; /* Adjust as needed */
    animation: 
      typing 3.5s steps(30, end),
      blink-caret .5s step-end infinite;
  }

/* The typing effect */
@keyframes typing {
  from { width: 0 }
  to { width: 100% }
}

/* The typewriter cursor effect */
@keyframes blink-caret {
  from, to { border-color: transparent }
  50% { border-color: orange }
} 

</style>