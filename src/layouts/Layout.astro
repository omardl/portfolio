---
interface Props {
	title: string;
	description: string;
}

const { title, description } = Astro.props;

import '@fontsource-variable/roboto-mono';

import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

import { getLangFromUrl, useTranslations } from '../i18n/utils';

const lang = getLangFromUrl(Astro.url);
---

<!doctype html>
<html lang={lang}>
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content={description} />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
    <script>
      if (localStorage.getItem('color-theme') === 'dark' || (!('color-theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
          document.documentElement.classList.add('dark');
      } else {
          document.documentElement.classList.remove('dark')
      }
    </script>
	</head>

	<body>
    <div id="mouse" class="glowing-mouse blur-2xl size-72 rounded-full">
    </div>
  
		<div class="fixed inset-0 z-[-10] pointer-events-none"> 
      <div class="absolute top-0 z-[-2] h-screen w-screen bg-neutral-100 bg-[radial-gradient(ellipse_80%_80%_at_50%_-20%,rgba(30,30,30,0),rgba(125,189,219,0.6))] dark:bg-neutral-950 dark:bg-[radial-gradient(ellipse_80%_80%_at_50%_-20%,rgba(120,119,198,0.3),rgba(255,255,255,0))]"></div>
      <div class="wave bg-sky-600/25 dark:bg-blue-600/25"></div>
      <div class="wave bg-sky-600/25 dark:bg-blue-600/25"></div>
      <div class="wave bg-sky-600/25 dark:bg-blue-600/25"></div>
    </div>
    
		<Header />
    
    <slot />
    
    <Footer />

	</body>
</html>

<!-- FUNCTION FOR MOUSE GLOW EFFECT FOLLOW -->
<script>
  if (typeof window !== "undefined") {
    document.addEventListener("DOMContentLoaded", function () {
      const follower = document.getElementById('mouse');

      if (follower) {
        setTimeout(function() {
          follower.style.opacity = '1';
        }, 1000);
        document.addEventListener("mousemove", function (event) {
          follower.style.left = event.clientX + window.scrollX + 'px';
          follower.style.top = event.clientY + window.scrollY + 'px';
        });
      }
    });
  }
</script>

<!-- FUNCTION FOR MOUSE GLOW EFFECT REACTION WHEN SCROLL -->
<script>
  window.addEventListener('scroll', function() {
    const follower = document.getElementById('mouse') ;

    if (follower) {
      follower.style.opacity = '0';

      document.addEventListener('mousemove', function(event) {
        follower.style.top = window.scrollY + event.clientY + 'px';

        setTimeout(function() {
          follower.style.opacity = '1';
        }, 1000);
      }) 
    }  
  });
</script>

<style is:global>
	
	:root {
		color-scheme: light dark;
	}

	html {
		font-family: 'Roboto Mono Variable', monospace;
		scroll-behavior: smooth;
	}

	body {
		display: flex;
		flex-direction: column;
		justify-content: center;
    overflow-x: hidden;
	}

	@media (prefers-reduced-motion) {
		html {
			scroll-behavior: auto;
		}
	}

  /** HEART ICON */
	.heart {
		stroke-dasharray: 16; 
	  animation: move 30s linear infinite;
	}
	
	@keyframes move {
		to {
			stroke-dashoffset: 1000; 
		}
	}

  .scroll-animation {
    animation: scroll 2.2s cubic-bezier(.15,.41,.69,.94) infinite;
  }

  @keyframes scroll {
    0% { opacity: 0; }
    10% { transform: translateY(0); opacity: 1; }
    100% { transform: translateY(15px); opacity: 0;}
  }

  /** SHINE EFFECT HOVER IMAGES */
  .shine-hover-effect:after {
    background: linear-gradient(
      to right,
      rgba(255, 255, 255, 0.13) 0%,
      rgba(255, 255, 255, 0.13) 77%,
      rgba(255, 255, 255, 0.5) 92%,
      rgba(255, 255, 255, 0.0) 100%
    );
  }
  
  .shine-hover-effect:hover:after {
    opacity: 1;
    left: 150%;
    transition-property: left, top, opacity;
    transition-duration: 0.7s, 0.7s, 0.15s;
    transition-timing-function: ease;
  }

  @keyframes fade-in {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 0.5;
    }
  }

  .background-layer:nth-child(1) {
    animation-name: fade-in;
  }

  /** MOUSE GLOW */
  .glowing-mouse  {
    position: absolute;
    pointer-events: none;
    z-index: -1;
    transform: translate(-142px, -140px);
    background: radial-gradient(circle, rgba(56, 189, 248, 0.2) 0%, rgba(0, 0, 255, 0.1) 100%);
    transition: opacity 1s ease-in-out;
  }

  @keyframes gradient {
    0% {
        background-position: 0% 0%;
    }
    50% {
        background-position: 100% 100%;
    }
    100% {
        background-position: 0% 0%;
    }
  }

  .wave {
    border-radius: 1000% 1000% 0 0;
    position: fixed;
    width: 200%;
    height: 12em;
    animation: wave 10s -3s linear infinite;
    transform: translate3d(0, 0, 0);
    opacity: 0.8;
    bottom: 0;
    left: 0;
    z-index: -1;
  }

  .wave:nth-of-type(2) {
    bottom: -1.25em;
    animation: wave 18s linear reverse infinite;
    opacity: 0.8;
  }

  .wave:nth-of-type(3) {
    bottom: -2.5em;
    animation: wave 20s -1s reverse infinite;
    opacity: 0.9;
  }

  @keyframes wave {
    2% {
        transform: translateX(1);
    }

    25% {
        transform: translateX(-25%);
    }

    50% {
        transform: translateX(-50%);
    }

    75% {
        transform: translateX(-25%);
    }

    100% {
        transform: translateX(1);
    }
  }
  
  /** GRID SECTION STYLES */
  .grid-container {
    display: grid;
    grid-template-columns: 280px 194px 196px 194px 280px;
    grid-template-rows: 75px 250px 100px 50px;    
  }

  .grid-container-md {
    display: grid;
    grid-template-columns: 180px 94px 96px 94px 180px;
    grid-template-rows: 75px 250px 100px 50px;  
  }

  .grid-container-sm {
    display: grid;
    grid-template-columns: 280px 194px 196px 194px 280px;
    grid-template-rows: 75px 250px 100px 50px;  
  }
  

  .grid-education {
    display: grid;
    grid-template-columns: 590px 589.5px;
    grid-template-rows: 200px;
  }

  .grid-experience {
    display: grid;
    grid-template-columns: 590px 589.5px;
    grid-template-rows: 240px;
  }

  .grid-projects {
    display: grid;
    grid-template-columns: 590px 589.5px;
    grid-template-rows: 30px 400px 60px;
  }

</style>