---
import AngularIcon from '../icons/Angular.astro'
import ArduinoIcon from '../icons/Arduino.astro'
import DockerIcon from '../icons/Docker.astro'
import GitHubIcon from '../icons/GitHub.astro'
import JetpackComposeIcon from '../icons/JetpackCompose.astro'
import JiraIcon from '../icons/Jira.astro'
import KotlinIcon from '../icons/Kotlin.astro'
import MongoDBIcon from '../icons/MongoDB.astro'
import MosquittoIcon from '../icons/Mosquitto.astro'
import NFCIcon from '../icons/NFC.astro'
import NodeJSIcon from '../icons/NodeJS.astro'
import NodeRedIcon from '../icons/NodeRed.astro'
import PythonIcon from '../icons/Python.astro'
import ReadmeIcon from '../icons/Readme.astro'
import SOFAIcon from '../icons/SOFA.astro'
import SolidityIcon from '../icons/Solidity.astro'
import SpringBootIcon from '../icons/SpringBoot.astro'
import TensorFlowIcon from '../icons/TensorFlow.astro'
import UnderDevelopmentIcon from '../icons/UnderDevelopment.astro'

import Badge from '../components/Badge.astro';
import Contact from '../components/Contact.astro';

import { getLangFromUrl, useTranslations } from '../i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const TAGS = {
    Angular: {
        name: 'Angular',
        class: 'text-Angular-color bg-Angular-bg border-Angular-color',
        bg_gradient: 'bg-[conic-gradient(from_90deg_at_50%_50%,#DE002D_0%,#590113_50%,#DE002D_100%)] dark:bg-[conic-gradient(from_90deg_at_50%_50%,#DE002D_0%,#590113_50%,#DE002D_100%)]',
        icon: AngularIcon
    },

    Arduino: {
        name: 'Arduino',
        class: 'text-Arduino-color bg-Arduino-bg border-Arduino-color',
        bg_gradient: 'bg-[conic-gradient(from_90deg_at_50%_50%,#02acbf_0%,#013036_50%,#02acbf_100%)]',    
        icon: ArduinoIcon
    },

    Docker: {
        name: 'Docker',
        class: 'text-Docker-color bg-Docker-bg border-Docker-color',
        bg_gradient: 'bg-[conic-gradient(from_90deg_at_50%_50%,#1D63ED_0%,#0c2659_50%,#1D63ED_100%)]',    
        icon: DockerIcon
    },

    Jetpack: {
        name: 'Jetpack Compose',
        class: 'text-Jetpack-color bg-Jetpack-bg border-Jetpack-color',
        bg_gradient: 'bg-[conic-gradient(from_90deg_at_50%_50%,#2EC781_0%,#145738_50%,#2EC781_100%)]',
        icon: JetpackComposeIcon
    },

    Jira: {
        name: 'Jira',
        class: 'text-Jira-color bg-Jira-bg border-Jira-color',
        bg_gradient: 'bg-[conic-gradient(from_90deg_at_50%_50%,#2178f1_0%,#0a1e38_50%,#2178f1_100%)]',
        icon: JiraIcon
    },

    Kotlin: {
        name: 'Kotlin',
        class: 'text-Kotlin-color bg-Kotlin-bg border-Kotlin-color',
        bg_gradient: 'bg-[conic-gradient(from_90deg_at_50%_50%,#A729E5_0%,#430c5e_50%,#A729E5_100%)]',  
        icon: KotlinIcon
    },

    MongoDB: {
        name: 'MongoDB',
        class: 'text-MongoDB-color bg-MongoDB-bg border-MongoDB-color',
        bg_gradient: 'bg-[conic-gradient(from_90deg_at_50%_50%,#00ed64_0%,#00461E_50%,#00ed64_100%)]',    
        icon: MongoDBIcon
    },

    Mosquitto: {
        name: 'Mosquitto',
        class: 'text-Mosquitto-color bg-Mosquitto-bg border-Mosquitto-color',
        bg_gradient: 'bg-[conic-gradient(from_90deg_at_50%_50%,#de8002_0%,#663b01_50%,#de8002_100%)]',    
        icon: MosquittoIcon
    },

    NFC: {
        name: 'NFC',
        class: 'text-NFC-color bg-NFC-bg border-NFC-color',
        bg_gradient: 'bg-[conic-gradient(from_90deg_at_50%_50%,#3a80c9_0%,#193859_50%,#3a80c9_100%)]',    
        icon: NFCIcon
    },

    NodeJS: {
        name: 'NodeJS',
        class: 'text-NodeJS-color bg-NodeJS-bg border-opacity-100',
        bg_gradient: 'bg-[conic-gradient(from_90deg_at_50%_50%,#70d156_0%,#35592C_50%,#70d156_100%)]',    
        icon: NodeJSIcon
    },

    NodeRed: {
        name: 'NodeRed',
        class: 'text-NodeRed-color bg-NodeRed-bg border-NodeRed-color',
        bg_gradient: 'bg-[conic-gradient(from_90deg_at_50%_50%,#c90000_0%,#660101_50%,#c90000_100%)]',    
        icon: NodeRedIcon
    },

    Python: {
        name: 'Python',
        class: 'text-Python-color bg-Python-bg border-Python-color',
        bg_gradient: 'bg-[conic-gradient(from_90deg_at_50%_50%,#e3bb02_0%,#655300_50%,#e3bb02_100%)]',    
        icon: PythonIcon
    },

    SOFA: {
        name: 'SOFA',
        class: 'text-SOFA-color bg-SOFA-bg border-SOFA-color',
        bg_gradient: 'bg-[conic-gradient(from_90deg_at_50%_50%,#e84e1b_0%,#6e240b_50%,#e84e1b_100%)]',    
        icon: SOFAIcon
    },

    Solidity: {
        name: 'Solidity',
        class: 'text-Solidity-color bg-Solidity-bg border-Solidity-color',
        bg_gradient: 'bg-[conic-gradient(from_90deg_at_50%_50%,#6259d4_0%,#2b275c_50%,#6259d4_100%)]',    
        icon: SolidityIcon
    },

    SpringBoot: {
        name: 'SpringBoot',
        class: 'text-SpringBoot-color bg-SpringBoot-bg border-SpringBoot-color',
        bg_gradient: 'bg-[conic-gradient(from_90deg_at_50%_50%,#81d936_0%,#325415_50%,#81d936_100%)]',    
        icon: SpringBootIcon
    },

    TensorFlow: {
        name: 'TensorFlow',
        class: 'text-TensorFlow-color bg-TensorFlow-bg border-TensorFlow-color',
        bg_gradient: 'bg-[conic-gradient(from_90deg_at_50%_50%,#FF8C00_0%,#4f2c02_50%,#FF8C00_100%)]',    
        icon: TensorFlowIcon
    }
}

const PROJECTS = [
    {
        title: t('project.title.1'),        
        description: t('project.description.1'),
        document: '/TFG.pdf',
        image: '/project_images/SOFA.webp',
        alt_img: 'Omar\'s portfolio TFG',
        position_text: 'lg:col-start-2',
        position_image: 'lg:col-start-1',
        progress: t('project.notfinished'),
        tags: [TAGS.SOFA, TAGS.Python]
    },

    {
        title: t('project.title.2'),
        description: t('project.description.2'),
        image: '/project_images/Android.webp',
        alt_img: 'Omar\'s portfolio Android technical test',
        git: 'https://github.com/omardl/Android-tecnhical-test',
        readme: 'https://github.com/omardl/Android-tecnhical-test/blob/main/README.md',
        position_text: 'lg:col-start-1',
        position_image: 'lg:col-start-2',
        tags: [TAGS.Kotlin, TAGS.Jetpack],
    },

    {
        title: t('project.title.3'),
        description: t('project.description.3'),
        image: '/project_images/MintAPI.webp',
        alt_img: 'Omar\'s portfolio MintAPI project',
        git: 'https://github.com/omardl/Mint-NFTs-API--GETT-UVigo',
        readme: 'https://github.com/omardl/Mint-NFTs-API--GETT-UVigo/blob/master/README.md',
        position_text: 'lg:col-start-2',
        position_image: 'lg:col-start-1',
        tags: [TAGS.Angular, TAGS.Solidity],
    },

    {
        title: t('project.title.4'),
        description: t('project.description.4'),
        image: '/project_images/NodeSec.webp',
        alt_img: 'Omar\'s portfolio NodeSec project',
        git: 'https://github.com/omardl/NodeSec---Capacity-control-system-based-on-blockchain--GET-UVigo',
        readme: 'https://github.com/omardl/NodeSec---Capacity-control-system-based-on-blockchain--GET-UVigo/blob/main/README.md',
        position_text: 'lg:col-start-1',
        position_image: 'lg:col-start-2',
        tags: [TAGS.Arduino, TAGS.MongoDB, TAGS.NFC, TAGS.NodeRed, TAGS.Python, TAGS.SpringBoot, TAGS.TensorFlow],
    },

    {
        title: t('project.title.5'),
        description: t('project.description.5'),
        image: '/project_images/sunBoat.webp',
        alt_img: 'Omar\'s portfolio Sun boat project',
        git: 'https://github.com/omardl/Sun-boat---Design-and-configuration-of-the-communications-arquitecture-and-protocols--GETT-UVigo',
        readme: 'https://github.com/omardl/Sun-boat---Design-and-configuration-of-the-communications-arquitecture-and-protocols--GETT-UVigo/blob/main/README.md',
        position_text: 'lg:col-start-2',
        position_image: 'lg:col-start-1',
        tags: [TAGS.Arduino, TAGS.Docker, TAGS.Jira, TAGS.MongoDB, TAGS.Mosquitto, TAGS.NodeRed, TAGS.Python],
    },

    {
        title: t('project.title.6'),
        description: t('project.description.6'),
        image: '/project_images/REST_API.webp',
        alt_img: 'Omar\'s portfolio REST API project',
        readme: 'https://github.com/omardl/REST-API-webshop--GETT-UVigo/blob/main/README.md',
        git: 'https://github.com/omardl/REST-API-webshop--GETT-UVigo',
        position_text: 'lg:col-start-1',
        position_image: 'lg:col-start-2',
        tags: [TAGS.Angular, TAGS.MongoDB, TAGS.NodeJS],
    },

]

---
<div class="shadow-grid-mini hover:shadow-grid-hover-mini dark:shadow-grid hover:dark:shadow-grid-hover p-6 rounded-3xl">
    <span class="row-start-1 col-start-1 text-lg xl:text-2xl font-semibold text-pretty text-gray-800/80 dark:text-sky-300">
        {t('projects.description')}
    </span>
</div>

{
    PROJECTS.map(project => (
    
        <div class="grid grid-cols-1 grid-rows-[auto_auto_180px_60px] sm:grid-rows-[auto_auto_400px_60px] lg:grid-cols-2 lg:grid-rows-[30px_350px_60px] xl:grid-rows-[30px_400px_60px] shadow-grid-mini hover:shadow-grid-hover-mini dark:shadow-grid hover:dark:shadow-grid-hover py-3 lg:py-6 px-6 my-12 gap-3 lg:gap-6 border-[1px] border-[#212121] hover:border-blue-800 hover:dark:border-sky-400 backdrop-blur-sm bg-opacity-40 rounded-3xl">
            <div class="row-start-1 col-start-1 col-span-1 lg:col-span-2 flex items-center justify-center">
                <span class="text-[22px] xl:text-2xl font-semibold text-center text-gray-800/80 underline dark:text-sky-300">
                    {project.title}
                </span>
            </div>

            <div class={`row-start-2 row-span-1 lg:row-span-2 ${project.position_text} flex flex-col gap-y-0 lg:gap-y-3 justify-center rounded-3xl`}>
                <span class="text-base xl:text-xl font-semibold text-gray-800/80 dark:text-sky-500 mt-1 mx-4 text-pretty hover:mx-6 duration-300">
                    {project.description}
                </span> 
            
                <div class="h-[1.5px] bg-blue-600 dark:bg-sky-400 my-2 my-6 rounded-3px"></div>
            
                <div class="gap-x-1 mx-1 md:gap-x-4 md:mx-4 flex flex-wrap text-pretty">
                    {project.tags.map((tag) => (        
                        <span class="flex justify-center relative my-2 inline-flex h-[36px] overflow-hidden rounded-full p-0.5" >
                            <span class={`absolute inset-[-1000%] animate-[spin_2s_linear_infinite] ${tag.bg_gradient}`} />
                            <div class={`inline-flex items-center justify-center px-3 py-1 gap-x-2 ${tag.class} text-xs dark:text-slate-50 rounded-full dark:bg-gray-800 dark:text-white/80 backdrop-blur-3xl whitespace-nowrap`}>
                                <tag.icon class={`size-6 md:size-7 bg-slate-50 rounded-full border-[2px] ${tag.class}`}/> {tag.name}
                            </div>
                        </span>       
                    ))}    
                </div>

            </div>
                
            <div class={`relative group flex flex-col justify-center row-start-3 lg:row-start-2 col-start-1 ${project.position_image} gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50`}>
                <img class="transition duration-500 scale-105 sm:scale-100 lg:scale-110 group-hover:scale-100 sm:group-hover:scale-105 lg:group-hover:scale-100" loading="lazy" alt={project.alt_img} src={project.image} />
            </div>

            <div class={`flex flex-row items-center justify-evenly col-start-1 ${project.position_image} row-start-4 lg:row-start-3`}>
                    {/* Under development span message */}
                    {/* {project.progress &&
                        <div class="w-auto h-12">  
                            <span class="relative inline-flex h-full w-full overflow-hidden rounded-full p-0.5" >
                                <span class="absolute inset-[-1000%] animate-[spin_2s_linear_infinite] duration-1000 bg-[conic-gradient(from_90deg_at_50%_50%,#55bff2_0%,#006ba8_50%,#55bff2_100%)] dark:bg-[conic-gradient(from_90deg_at_50%_50%,#51a9e4_0%,#214255_50%,#51a9e4_100%)]" />
                                <div class="inline-flex items-center justify-center w-full px-3 py-1 text-sm md:text-base font-semibold text-black/80 duration-1000 dark:text-sky-600 bg-sky-300/80 dark:bg-[#0f0f0f] rounded-full backdrop-blur-3xl whitespace-nowrap">
                                    <UnderDevelopmentIcon class="mr-2 text-base"/> {project.progress}
                                </div>
                            </span>           
                        </div>
                    } */}
                    {project.document &&
                        <Contact href={project.document} >    
                            <ReadmeIcon class="size-5" />
                            {t('project.readme')}   
                        </Contact>
                    }
                    {project.git && 
                        <Contact href={project.git} >    
                            <GitHubIcon class="size-5" />
                            GitHub 
                        </Contact>
                    }
                    {project.readme &&          
                        <Contact href={project.readme} >    
                            <ReadmeIcon class="size-5" />
                            {t('project.readme')}   
                        </Contact>
                    }
            </div>            
        </div>                          
    ))
}
